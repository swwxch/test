/**
 * Created by xiehao on 2016/7/19.
 * --------------------
 * - 字典模块 -
 * --------------------
 * 实现用户的管理功能。
 */
import eventUtils from "../../core/utils/EvenUtils";
import Handler from "../../core/handler/Handler";
import ajaxRequest from "../../core/ajax/AjaxRequest";

export default new Handler({
    ajaxBasePath: "/crud",
    resolveTpl: function (tpl) {
        return require("./tpl/" + tpl + ".html");
    },
    getChildDic: function (args) {
        let itemId = args.itemId;
        args.data = {"parentId": itemId};
        this.render(args);
    },
    addDic: function (args) {
        if (args.tpl) {
            args.data = {"parentId": $("#parentId").val()};
            args.type = args.type || 'get';
            this.render(args);
        } else {
            throw new Error(
                "参数无效，请传递如" +
                "{tpl:demo/user/list-(必选)," +
                "contentId:pageList-(默认)" +
                "}的JS对象"
            );
        }
    },
    sortUp: function (args) {
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        if ($tr.index() !== 0) {
            let pre = $tr.prev();
            let itemId = pre.children('.itemId').val();

            $tr.fadeOut().fadeIn();
            pre.before($tr);
            ajaxRequest.ajax({
                type: "post",
                url: this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url,
                data: {"id": args.id, "swapId": itemId}
            });
        }
    },
    sortDown: function (args) {
        let len = $("#example2 tr").length;
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        //console.log('$tr.index()==='+$tr.index());
        //console.log(" len=="+len );
        //console.log(" len - 2=="+(len - 2));
        if ($tr.index() !== (len - 2)) {
            $tr.fadeOut().fadeIn();
            let next = $tr.next();
            let itemId = next.children('.itemId').val();
            //console.log('itemId==='+itemId);
            if (typeof(itemId) === 'undefined' || itemId === null) {
                return;
            }
            $tr.next().after($tr);
            ajaxRequest.ajax({
                type: "post",
                url: this.ajaxBasePath? this.ajaxBasePath + args.url : args.url,
                data: {"id": args.id, "swapId": itemId}
            });
        }
    },
    sortTop: function (args) {
        let $tr = eventUtils.getCurrentEventTarget().parents("tr");
        $tr.fadeOut().fadeIn();
        $("#example2").prepend($tr);
        $tr.css("color", "#f60");
        //let that = this;
        ajaxRequest.ajax({
            type: "post",
            url: this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url,
            data: {"id": args.id}
        }).then(function (data) {
            //let item = $('#' + config.options.contentId + ' [e-handle*="search"]');
            //that.search(utils.getJsonByAttr(item), item);
        });
    }
});