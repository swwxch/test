/***
 * @描述：弹窗类，继承Component
 * @author:create by wangchen 2017.8.4
 * @用途：可以根据定位目标元素和数据渲染下拉框
 * @使用中注意点如下：
 * 标签名称e-popu
 * 使用实例如下：
 <e-popu id="popu1" name="popu1" e-url="/test/dictionary/list"  
                                e-unique="gwType" e-option-value-title="编码2" e-option-value="code" 
                                e-option-text-title="名称3" e-option-text="value" e-title="弹出页面1"
                                e-query-param="search_parent_id:77df550e2a364e2c99013f286c3f8bcb" 
                                e-width="800px" e-height="500px">
                                </e-popu>
 * 类中的属性标签：
 * e-option-value-title 数据中编码的字段名称，默认“编码”
 * e-option-value       数据中的编码字段code，默认“code”
 * e-option-text-title  数据中的编码对应的汉字的字段名称，默认“名称”
 * e-option-text        数据中的编码对应的汉字的字段code ，默认“value”
 * e-title              弹出窗口标题，默认“信息”
 * e-query-param        查询地址如果是post提交所需要的表单参数（如果没有参数可不填）
 * e-width              弹出窗口宽度，默认800px
 * e-height             弹出窗口高度，默认600px
 * 必填的html原生属性
 * id,name
 */
import BaseComponent from "../BaseComponent";
import renderer from "../../render/Renderer";
'use strict';
let __instance = null;
export default class EPopu extends BaseComponent {

    constructor() {
        super();
        this.name = 'e-popu';
    }

    static instance() {
        if (__instance == null) {
            __instance = new EPopu();
        }
        return __instance;
    }

    /**
     * @Override
     */
    setArgsBeforeRw(args, options) {
        args = super.setArgsBeforeRw(args, options);
        args.optionValue = args.optionValue || "code";
        args.optionText = args.optionText || "value";
        args.optionValueTitle = args.optionValueTitle || "编码";
        args.optionTextTitle = args.optionTextTitle || "名称";
        args.id = args.id || args.name;
        args.popuUrl = args.url;
        delete  args.url;//防止后面操作误用到了url属性，删除掉
        //如果需要查询页面设置参数，则进行参数处理，最后生成对应的隐藏域
        if(typeof(args.queryParam)!='undefined' && args.queryParam.indexOf(":")>0){
            let params = [];
            let queryParamArrs = args.queryParam.split(',');
            let p = null;
            for (let v of queryParamArrs) {
                if(v.indexOf(':')>-1){
                    p = v.split(':');
                    params.push({name:p[0],val:p[1]});
                }
            }
            args.formhiddens = params;
        }
        return args;
    }

    /**
     * @Override
     */
    generateHtml(args) {
        let btnData = {id:args.id,name:args.name,url:args.url};
        return  this.getBtnTl()(btnData || {});
    }

    getBtnTl(){
        return this.resolveTpl("epopu_btn");
    }

    /**
     * @Override
     */
    executeAferRw(args) {
        let content = args.content;
        content.find('button').on('click',(e)=>{
            args.tpl='index';
            this.dialog(args);

        });
    }

    /**
     * 弹出信息框
     * @param args
     * {dialog:confirm,type:post-(默认),isReload:true-(默认),url:/demo/mybatisuser/pages-(可选)}
     */
    dialog(args) {
        let promise = null;
        let layerId = layer.open({
                    shade: 0,
                    zIndex: 1,
                    type: 1,
                    move: args.move,
                    title: args.title || '信息',
                    area: [args.width || '800px', args.height || '600px'] //宽高
                });
                args.contentId = $('#layui-layer' + layerId).find('.layui-layer-content');
                args.layerId = layerId;
                args.data = args;
                promise = this.render(args);
        return promise;
    }

    /**
     * 界面渲染
     * @param args
     * {tpl:list-(必选),type:post-(默认),url:/demo/mybatisuser/pages-(可选),contentId:content-wrapper-(默认)}
     */
    render(args) {
        if (args.tpl) {
            if (args.url) {
                args.url = this.ajaxBasePath ? this.ajaxBasePath + args.url : args.url;
            }
            return renderer.render(args, this.resolveTpl(args.tpl));
        } else {
            throw new Error("参数无效，请传递如{tpl:list-(必选),type:post-(默认),url:/demo/mybatisuser/pages-(可选),contentId:content-wrapper-(默认)}的JS对象");
        }

    }

    resolveTpl (tpl) {
        return require("./tpl/" + tpl + ".html");
    }

   

}
