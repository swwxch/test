/**
 * Created by wangchen on 2017/8/7.
 * Handler应用，用于弹出窗口事件
 */
import Handler from "../../handler/Handler";
import config from "../../Config";
import Table from "../table/Table";
import ajaxRequest from "../../ajax/AjaxRequest";
import cacheUtils from "../../cache/CacheUtils";

export default new Handler({
    resolveTpl: function(tpl) {
        return require("./tpl/" + tpl + ".html");
    },
    onIndexed: function() {
        console.info('i am popu/index.html页加载完成');

    },

    /**
     * 实现查询功能
     * @param args
     * {url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}
     */
    search(args) {
        args.form = args.form || 'searchForm';
        if (args.url) {
            args.contentId = args.contentId || config.listId;

            let form = $(`#${args.form}`);
            if (form.length > 0) {
                args.data = form.serialize();
                args.tpl = args.tpl || config.listTpl;
               this.fetchData(args).then((data) => {
                    let theadHtml = this.renderListTheadHtml(data,args);
                    let tbodyHtml = this.renderListTBodyHtml(data,args);
                    args.url = null;
                    args.data = data;
                    args.data.theadHtml=theadHtml;
                    args.data.tbodyHtml=tbodyHtml;
                    // args.data.tableHtml=tableHtml;
                    return this.render(args).then(function(data) {
                        //由于直接用arttemplate输出的html片段会被双引号包裹，导致页面不能正常显示，所以在render后用js添加
                       // $('#comsearchlistTable thead').html(theadHtml);
                        //$('#comsearchlistTable tbody').html(tbodyHtml);

                        new Table({
                            pageNum: data.pageNum,
                            totalPages: data.totalPages,
                            totalSize: data.totalSize,
                            pageSize: data.pageSize,
                            buttonClickCallback: this.search.bind(this, args)
                        });
                    }.bind(this));


                });


            } else {
                throw new Error("参数无效，DOM中无法找到id为[" + args.form + "]的Form！");
            }

        } else {
            throw new Error("参数无效，请传递如{url:/demo/mybatisuser/pages-(必选),type:post-(默认),tpl:list-(默认),contentId:list-(默认)}的JS对象");
        }

    },
    //行click事件，选中某个元素
    clickone(args){
        $('#'+args.elId+'_dis').val(args.text);
        $('#'+args.elId+'_hid').val(args.code);
        layer.close(args.layerId);
    },
    //生成选择列表中table的tbody的html
    renderListTBodyHtml(data,args) {
        let tbodyHtml = [];
        //tbodyHtml.push('<tbody>');
        if (data.totalSize == 0) {
            tbodyHtml.push('<tr><td class="lefttd" colspan="3">没有数据</td></tr>');
        } else {
            for (let val of data.content) {
                tbodyHtml.push('<tr role="row" class="odd" style="cursor:pointer" ');
                tbodyHtml.push('e-event="href:/component/popu/clickone?code=');
                tbodyHtml.push(val[args.optionValue]);
                tbodyHtml.push('&text=');
                tbodyHtml.push(val[args.optionText]);
                tbodyHtml.push('&elId=');
                tbodyHtml.push(args.elId);
                tbodyHtml.push('&layerId=');
                tbodyHtml.push(args.layerId);
                tbodyHtml.push('">');
                tbodyHtml.push('<td>');
                tbodyHtml.push(val[args.optionValue]);
                tbodyHtml.push('</td>');
                tbodyHtml.push('<td>');
                tbodyHtml.push(val[args.optionText]);
                tbodyHtml.push('</td>');
                tbodyHtml.push('</tr>');
            }
        }
        //tbodyHtml.push('</tbody>');
        return tbodyHtml.join('');
    },
    //生成选择列表中table的thead的html
    renderListTheadHtml(data,args) {
        let theadHtml = [];
        // theadHtml.push('<thead>');
        theadHtml.push('<tr role="row">');
        theadHtml.push('<th class="sorting" sort="');
        theadHtml.push('code');
        theadHtml.push('">');
        theadHtml.push(args.optionValueTitle);
        theadHtml.push('</th>');
        theadHtml.push('<th class="sorting" sort="');
        theadHtml.push('value');
        theadHtml.push('">');
        theadHtml.push(args.optionTextTitle);
        theadHtml.push('</th>');
        theadHtml.push('</tr>');
        return theadHtml.join('');
    },
    /**
     * 获取下拉框所需要的数据
     * @param args
     * @returns {Promise}
     */
    fetchData(args) {
        return new Promise((resolve) => {
            let cacheData =  cacheUtils.get(args.unique);
            if (cacheData) {
                resolve(cacheData);
            } else if (typeof(args.url) != 'undefined' && args.url != '') {
                    ajaxRequest.ajax(args).then((data)=> {
                        if (data) {
                            resolve(data);
                            if (typeof(args.unique) != 'undefined') {
                                cacheUtils.push(args.unique, data)
                            }
                        }

                    });
            } else {
                resolve(null);
            }
        });
    },
    test: function() {
        alert(1);
    },
    analyzer: function() {
        alert(2);
    }
});

// import BaseHandler from "../../../core/handler/BaseHandler";
//
// class CrudHandler extends BaseHandler {
//
//     resolveTpl(tpl) {
//         return require("./tpl/" + tpl + ".html");
//     }
//
// }
//
// let crudHandler = new CrudHandler();
// crudHandler.addEvent("indexed", function () {
//     console.info('crud/index.html页加载完成');
// });
// export default crudHandler;
