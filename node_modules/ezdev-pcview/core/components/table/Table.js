/**
 * Created by zhaofs on 2016/7/19.
 * --------------------
 * - 表格 -
 * --------------------
 * 主要实现数据表格的排序与分页。
 * @Modify by wangchen 2017-2-14 增加了分页可选择每页显示条数的配置pageSizes:[10,20,30]
 */

export default class {
    constructor(options) {
        this.options = Object.assign({
            searchFormId: 'searchForm',
            pageID: 'pager',
            sortID: 'sort',
            pageNum: 1,
            totalPages: 0,
            totalSize: 0,
            pageSize: 1500,
            pageSizes: [10, 50, 100]//设置显示分页中可以选择的显示条数
        }, options);
        this.initPage();
        this.initSort(this.options.buttonClickCallback);
    }

    /**
     * 生成数据表格分页相关
     */
    initPage() {
        $(`#${this.options.pageID}`).pager({
            pagenumber: this.options.pageNum,
            pagecount: this.options.totalPages,
            rowcount: this.options.totalSize,
            pagesize: this.options.pageSize,
            pagesizes: this.options.pageSizes,
            buttonClickCallback: this.options.buttonClickCallback
        }).bind(this);
    }

    /**
     * 生成数据表格排序相关
     */
    initSort(buttonClickCallback) {
        let $sort = $(`#${this.options.sortID}`);
        let sortparent = $sort.parents("form");
        sortparent.find('.sorting,.sorting_asc,.sorting_desc').unbind("click");

        if ($sort.val()) {

            let sortWord = $sort.val().split(" ");
            if (sortWord.length == 2) {

                if (sortWord[1] == 'asc') {
                    sortparent.find('.sorting_asc').removeClass().addClass("sorting");
                    sortparent.find('.sorting_desc').removeClass().addClass("sorting");
                    sortparent.find('[sort=' + sortWord[0] + ']').removeClass().addClass("sorting_asc");
                } else {

                    sortparent.find('.sorting').removeClass().addClass("sorting");
                    sortparent.find('.sorting_desc').removeClass().addClass("sorting");
                    sortparent.find('[sort=' + sortWord[0] + ']').removeClass().addClass("sorting_desc");
                }

            }
        }


        sortparent.find('.sorting').click(function () {
            $sort.val($(this).attr('sort') + ' asc');
            buttonClickCallback();
        });


        sortparent.find('.sorting_asc').click(function () {
            $sort.val($(this).attr('sort') + ' desc');
            buttonClickCallback();

        });


        sortparent.find('.sorting_desc').click(function () {
            $sort.val('');
            buttonClickCallback();

        });
    }

}