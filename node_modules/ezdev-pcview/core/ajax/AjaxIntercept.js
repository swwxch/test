/**
 * Created by zhaofs on 2016/7/21.
 * --------------------
 * - ajax请求拦截 -
 * --------------------
 * 请求拦截,主要负责全局ajax请求处理
 */
export default class {
    initIntercept() {
        $(document).ajaxStart(function () {
            Pace.restart();
        });
        $(document).ajaxComplete(function (event, xhr, settings) {
            try {
                let contentType = xhr.getResponseHeader('Content-Type');
                if (this[xhr.status] && contentType) {
                    let result = contentType.indexOf('json') >= 0 ? JSON.parse(xhr.responseText) : {msg: xhr.responseText};
                    this[xhr.status](result, settings, xhr);
                } else {
                    this.other(xhr.responseText)
                }
            } catch (e) {
                console.error(e.message)
            }

        }.bind(this))
    }

    /**
     * 正常响应的处理
     * @param result
     */
    200(result) {
        result.msg && layer.msg(result.msg);
    }

    /**
     * 无权限访问状态的处理
     */
    401(result, settings, xhr) {
        store.remove('menuStr');
        store.set("originalUrl", location.hash.slice(1));
        location.href = xhr.getResponseHeader("Login-Url");
    }

    /**
     * 禁止访问资源
     */
    403(result, settings) {
        layer.msg("你请求[" + settings.url + " ]的资源被禁止访问");
    }

    /**
     * 无效资源状态的处理
     */
    404(result, settings) {
        layer.msg("你请求[" + settings.url + " ]的资源无效");
    }

    /**
     * 系统内部错误状态处理
     */
    500(result, settings) {
        result.msg && layer.msg("请求资源[" + settings.url + "]错误:" + result.msg);
    }

    /**
     * 请求超时
     */
    504(responseText, settings) {
        layer.msg("请求资源[" + settings.url + " ]超时");
    }

    /**
     * 其它状态的处理
     */
    other(xhr) {
        console.error(xhr.responseText);
    }
};
