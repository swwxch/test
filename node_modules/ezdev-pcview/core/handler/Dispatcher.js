/**
 * Created by zhaofs on 2016/7/19.
 * --------------------
 * - 调度器 -
 * --------------------
 * 根据锚点定位Handler并执行指定方法
 */
import handlerInvoker from "./MethodInvoker";

export default class {
    /**
     * 初始化调度器
     */
    initDispatcher() {
        window.addEventListener('load', this.dispatch.bind(this), false);
        window.addEventListener('hashchange', this.dispatch.bind(this), false);
    }

    /**
     * 执行调度
     */
    dispatch(event) {
        if (location.hash.slice(1)) {

            //激活菜单
            if (event.type === 'hashchange') window.ezdev.layout.activateMenu();

            //Handler方法调用
            let handlerMapping = this.resolveHandler();
            handlerInvoker.invoke(handlerMapping.path, handlerMapping.method, handlerMapping.args);
        }

    }

    /**
     * 分析Handler
     * @returns {{path: (string|*), method: (string|*), args: {}}}
     */
    resolveHandler() {
        return handlerInvoker.resolveHandler(location.hash.slice(1));
    }

};