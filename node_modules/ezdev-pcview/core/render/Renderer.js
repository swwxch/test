/**
 * Created by zhaofs on 2016/7/21.
 * --------------------
 * - 渲染器 -
 * --------------------
 * 实现对html片段的渲染
 */
import config from "../Config";
import anm from "./analyzer/AnalyzerManager";
import ajaxRequest from "../ajax/AjaxRequest";

//引入arttemplate过滤器
require("../arttemplate/ArttemplateFilter");


let getContainer = function (content) {
    return typeof(content) === 'string' ? $(`#${content}`) : content;
};

export default {
    /**
     * 根据JSON生成HTML并进行渲染,支持ajax请求
     * args:{type:post-(默认),url:/demo/mybatisuser/pages,contentId:pageList}
     */
    render: function (options, tplFn) {
        if (options && typeof(tplFn) === "function") {
            let content = options.contentId ? options.contentId : config.contentId;
            return new Promise((resolve) => {
                //如果有url参数就用ajax请求的数据渲染html
                if (options.url) {
                    ajaxRequest.ajax(options).then(function (data) {
                        try {
                            resolve(data);
                            this.innerHtml(content, tplFn(data || {}));
                        } catch (e) {
                            console.error('调用Renderer中的render方法错误！', e);
                        }
                    }.bind(this));
                } else {
                    let data = options.data || {};
                    this.innerHtml(content, tplFn(data));
                    resolve(data);
                }
            });
        } else {
            throw new Error("调用Renderer中的render方法参数无效，请传递参数tplFn:functions,options:{type:post-(默认),url:/demo/mybatisuser/pages,contentId:pageList}的JS对象");
        }
    },

    /**
     * 填充html
     * @param content
     * @param html
     */
    innerHtml: function (content, html) {
        if (content && html) {
            content = getContainer(content);
            /* 渲染HTML页面 */
            content.html(html);
            this.analyzeHtml(content);
        } else {
            throw new Error("参数无效，请传 content，html 参数");
        }
    },

    /**
     * 对加载的元素进行分析
     * @param content
     */
    analyzeHtml: function (content) {
        content = getContainer(content);
        $.each(anm.getAll(), function (index, analyzer) {
            analyzer.analyze.call(analyzer, content)
        });

    }

};