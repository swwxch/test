/**
 * Created by zhaofs on 2017/2/24.
 * --------------------
 * - 硬件以或第三方组件封装 -
 * --------------------
 * 对硬件或第三方组件提供统一接口。
 */

//TODO 如下代码需要重新修改ES6语法
var config = require("./Config");
var timedCount = require("../../business/fcc/public/timedCount");
if (config.options.specialBrowser) {
    var msg = '此模块涉及硬件接口需要在专用浏览器（CHRHC MicroCrust）下使用！';
    if (typeof qrCodeScaner === "undefined") {
        layer && layer.alert(msg);
        throw new Error(msg);
    }
}

var openShade = function () {
    layer.open({
        type: 1,
        title: false,
        area: ['480px', '500px'], //宽高
        content: '<img src="/images/fcc/gif/qrcode.gif">',
        cancel: function () {
            qrCodeScaner.closeListener();
            timedCount.stopCount();
        }
    });
};
var closeShade = function () {
    layer.closeAll();
};

var Device = new Class({
    Implements: [Options, Events],
    initialize: function (options) {
        //noinspection JSUnresolvedFunction
        this.setOptions(options);

        if (config.options.specialBrowser) {
            //处理二维码扫描回调
            qrCodeScaner.callback = function (data) {
                this.fireEvent('qrCodeScan', data);
            }.bind(this);

            //处理指纹采集
            fingerprint.acquireCallback = function (acquireCount, acquireContent, mergeContent) {
                this.fireEvent('fingerAcquire', {
                    acquireCount: acquireCount,//表时第几次采集，总共三次
                    acquireContent: acquireContent,//每次采集指纹base64编码
                    mergeContent: mergeContent//采集完成合并后的base64编码
                });
            }.bind(this);


            //处理指纹验证
            fingerprint.verifyCallback = function (acquireContent) {
                this.fireEvent('fingerVerify', acquireContent);
                timedCount.stopCount();
            }.bind(this);
        }

    },
    /**
     * 打开二维码扫描
     */
    openQrCodeListener: function () {
        openShade();
        qrCodeScaner.openListener();
        timedCount.timedCount();
    },

    /**
     * 关闭二维码扫描
     */
    closeQrCodeListener: function () {
        qrCodeScaner.closeListener();
        closeShade();
        timedCount.stopCount();
    },

    /**
     * 打开指纹采集监听
     */
    openFingerAcquireListener: function () {
        fingerprint.openAcquireListener();
    },

    /**
     * 打开指纹验证监听
     */
    openFingerVerifyListener: function () {
        fingerprint.openVerifyListener();
        timedCount.timedCount();
    },

    /**
     * 关闭指纹监听
     */
    closeFingerListener: function () {
        fingerprint.close();
        timedCount.stopCount();
    }

});

module.exports = new Device();

